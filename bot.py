import os
import shutil
import json
from itertools import islice
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import CommandStart

from aiogram import F

import logging

import time
from parse_module import main as parse_main 
from dotenv import load_dotenv

async def main():
    bot = Bot(token=BOT_TOKEN)
    dp = Dispatcher()

    @dp.message(CommandStart())
    async def start(message: Message):
        await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –ø–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏ —è –≤–µ—Ä–Ω—É —Ç–æ–ø-5 —Ç–æ–≤–∞—Ä–æ–≤ —Å Wildberries –ø–æ –æ—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∏–º –ø–æ–∑–∏—Ü–∏—è–º.")

    @dp.message(F.text)
    async def handle_query(message: types.Message):
        query = message.text.strip()
        print("receive message:",query)
        
        await message.answer(f"üîç –ü–æ–ª—É—á–µ–Ω–∞ –∫–ª—é—á–µ–≤–∞—è —Ñ—Ä–∞–∑–∞: <b>{query}</b>\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∏–¥—ë—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∞...\n(–ø—Ä–∏–º–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ ~ 40 —Å–µ–∫—É–Ω–¥)", parse_mode="HTML")
        
        try:
            start = time.time()
            result = await parse_main(query)
            exec_time = time.time() - start
            print("exec_time parse_main = ",exec_time)
            first_five = dict(islice(result.items(), 5))

            reply = "\u2705 –¢–æ–ø-5 —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ –∑–∞–ø—Ä–æ—Å—É:\n"
            for nm_id, data in first_five.items():
                url = data["link"]
                text = data["name"]
                resp = f'<a href="{url}">{text}</a>'
                reply += (f"\n{resp}\n"
                        f"{data['price']}‚ÇΩ (–°–ü–ü = 30%)\n"
                        f"{data['nmReviewRating']} ({data['nmFeedbacks']} –æ—Ç–∑—ã–≤–æ–≤) \n"
                        f"–û—Ä–≥–∞–Ω–∏—á–µ—Å–∫–∞—è –ø–æ–∑–∏—Ü–∏—è: {data['organic_position']}\n"
                        f"–°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤ –ø–æ–∏—Å–∫–µ: {data['page']}\n"
                )
            reply += f"\n –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è {exec_time}\n"
            await message.answer(reply, parse_mode="HTML")
        except Exception as e:
            await message.answer("\u274C –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞.")
            logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞")
    await dp.start_polling(bot)

if __name__ == "__main__":
    load_dotenv()
    BOT_TOKEN = os.getenv("TG_BOT_TOKEN")
    import asyncio
    asyncio.run(main())